logging {
  level = "warn"
}

prometheus.remote_write "primary" {
 endpoint {
  url = "https://{{ metrics_host }}/api/v1/push"
  basic_auth {
   username = "{{ metrics_user }}"
   password = "{{ metrics_password }}"
  }
  external_labels {
    hostname = "{{ ansible_hostname }}",
    project = "{{ project }}",
    environment = "{{ environment }}",
    tenant = "{{ tenants[0] }}",

  }
 }
}

prometheus.relabel "primary" {
  forward_to = [
    prometheus.remote_write.primary.receiver,
  ]

  rule {
    action        = "replace"
    source_labels = ["__name__"]
    target_label  = "instance"
    replacement = "{{ ansible_hostname }}"
  }

}


prometheus.exporter.unix "default" {
  include_exporter_metrics = true
  disable_collectors       = ["mdadm"]
}

prometheus.scrape "default" {
  scrape_interval = "15s"
  targets = concat(
      prometheus.exporter.unix.default.targets,
      [{
          // Self-collect metrics
          job         = "agent",
          __address__ = "127.0.0.1:12345",
      },
      ],
  )

  forward_to = [
    prometheus.relabel.primary.receiver,
  ]
}

// Additional configs
discovery.file "extras" {
  files = ["/etc/grafana-targets.d/*.yml"]
}

prometheus.scrape "extra_files" {
  scrape_interval = "15s"
  targets = discovery.file.extras.targets

  forward_to = [
    prometheus.relabel.primary.receiver,
  ]
}

// Logs
loki.relabel "journal" {
  forward_to = []

  rule {
    source_labels = ["__journal__systemd_unit"]
    target_label  = "unit"
  }
}

loki.source.journal "read"  {
  forward_to    = [loki.write.endpoint.receiver]
  relabel_rules = loki.relabel.journal.rules
  labels        = {component = "loki.source.journal"}
}

loki.write "endpoint" {
  endpoint {
    url ="https://{{logs_host}}/loki/api/v1/push"
    basic_auth {
      username = "{{ metrics_user }}"
      password = "{{ metrics_password }}"
    }
  }
  external_labels = {
    "hostname" = "{{ ansible_hostname }}",
    project = "{{ project }}",
    environment = "{{ environment }}",
    tenant = "{{ tenants[0] }}",
  }
}


local.file_match "logs" {
  path_targets = [
    {__path__ = "/var/log/*.log"},
  ]
}

loki.source.file "tmpfiles" {
  targets    = local.file_match.logs.targets
  forward_to = [loki.write.endpoint.receiver]
}

loki.write "local" {
  endpoint {
    url = "loki:3100/api/v1/push"
  }
}

discovery.docker "linux" {
  host = "unix:///var/run/docker.sock"
}

loki.source.docker "default" {
  host       = "unix:///var/run/docker.sock"
  targets    = discovery.docker.linux.targets
  forward_to = [loki.write.endpoint.receiver]
}

