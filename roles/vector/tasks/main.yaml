- name: Get system architecture
  ansible.builtin.command: dpkg --print-architecture
  register: system_arch
  changed_when: false
  
- name: Download Vector deb package
  ansible.builtin.get_url:
    url: "https://apt.vector.dev/pool/v/ve/vector_{{ vector_version }}_{{ system_arch.stdout }}.deb"
    dest: "/tmp/vector_{{ vector_version }}_{{ system_arch.stdout }}.deb"
    mode: '0644'
  
- name: Install Vector using dpkg
  ansible.builtin.dpkg:
    path: "/tmp/vector_{{ vector_version }}_{{ system_arch.stdout }}.deb"
    
- name: Clean up downloaded deb file
  ansible.builtin.file:
    path: "/tmp/vector_{{ vector_version }}_{{ system_arch.stdout }}.deb"
    state: absent

- name: copy vector multi systemd unit
  copy:
    src: vector-multi.service
    dest: /etc/systemd/system/vector-multi.service

- name: reload systemd
  systemd:
    daemon-reload: true

- name: Stop and disable stock vector
  ignore_errors: yes
  ansible.builtin.systemd:
    name: vector
    state: stopped
    enabled: false

- name: Start and enable multi vector
  ignore_errors: yes
  ansible.builtin.systemd:
    name: vector-multi
    state: started
    enabled: true

- name: Check if docker group exists
  command: getent group docker
  register: docker_group_check
  ignore_errors: yes

- name: Set fact if docker is installed
  set_fact:
    docker_installed: "{{ docker_group_check.rc == 0 }}"

- name: Add user to docker group if group exists
  user:
    name: vector
    groups: docker
    append: yes
  when: docker_group_check.rc == 0

- name: Create config file
  template:
    src: vector.yaml.j2
    dest: /etc/vector/vector.yaml
  notify: Restart Vector


